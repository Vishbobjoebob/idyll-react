[{"/Users/jensenzhang/Desktop/idyll-react/client/src/index.js":"1","/Users/jensenzhang/Desktop/idyll-react/client/src/App.js":"2","/Users/jensenzhang/Desktop/idyll-react/client/src/config/firebase-config.js":"3","/Users/jensenzhang/Desktop/idyll-react/client/src/components/NavDashboard.js":"4","/Users/jensenzhang/Desktop/idyll-react/client/src/components/Search.js":"5","/Users/jensenzhang/Desktop/idyll-react/client/src/components/Sell.js":"6","/Users/jensenzhang/Desktop/idyll-react/client/src/contexts/AuthContext.js":"7","/Users/jensenzhang/Desktop/idyll-react/client/src/components/Browse.js":"8"},{"size":296,"mtime":1637808258949,"results":"9","hashOfConfig":"10"},{"size":3501,"mtime":1638751924698,"results":"11","hashOfConfig":"10"},{"size":557,"mtime":1637681709702,"results":"12","hashOfConfig":"10"},{"size":15589,"mtime":1640213066221,"results":"13","hashOfConfig":"10"},{"size":292,"mtime":1637800449684,"results":"14","hashOfConfig":"10"},{"size":11031,"mtime":1640213209005,"results":"15","hashOfConfig":"10"},{"size":4359,"mtime":1640213177968,"results":"16","hashOfConfig":"10"},{"size":5334,"mtime":1638331686084,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"q322f6",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"/Users/jensenzhang/Desktop/idyll-react/client/src/index.js",[],["38","39"],"/Users/jensenzhang/Desktop/idyll-react/client/src/App.js",["40","41","42","43","44"],"import React, { useEffect, useState} from \"react\"\nimport axios from 'axios'\nimport './App.css';\nimport firebase from 'firebase/compat/app'\nimport 'firebase/compat/auth'\nimport Sell from './components/Sell'\nimport Search from './components/Search'\nimport Browse from './components/Browse'\nimport NavDashboard from './components/NavDashboard';\nimport { AuthProvider } from './contexts/AuthContext';\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom'\n\nfunction App() {  \n    // const [auth, setAuth] = useState(false || window.localStorage.getItem(\"auth\")===true);\n    // const [token, setToken] = useState('')\n    // const [user, setUser] = useState(firebase.auth().currentUser)\n\n    // useEffect(()=> {\n    //     firebase.auth().onAuthStateChanged((userCred) => {\n    //     if (userCred) {\n    //         setAuth(true)\n    //         window.localStorage.setItem('auth', 'true')\n    //         userCred.getIdToken().then((token) => {\n    //         setToken(token)\n    //         })\n    //         setUser(firebase.auth().currentUser);\n    //         console.log(user)\n    //     }\n    //     })\n    // })\n    // const loginWithGoogle = async() => {\n    //     await firebase\n    //     .auth()\n    //     .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n    //     .then((userCred)=> {\n    //     if (userCred) {\n    //         setAuth(true);\n    //         window.localStorage.setItem('auth', 'true')\n    //         setUser(firebase.auth().currentUser);\n    //         console.log(user)\n    //     }\n    //     console.log(userCred) \n    //     })\n    // }\n\n    // const loginWithEmail = async(email, password) => {\n    //     await firebase\n    //     .auth()\n    //     .signInWithEmailAndPassword(email, password)\n    //     .then((userCred)=> {\n    //     if (userCred) {\n    //         console.log(userCred)\n    //         setAuth(true);\n    //         window.localStorage.setItem('auth', 'true')\n    //         setUser(firebase.auth().currentUser);\n    //         console.log(user)\n    //     }\n    //     console.log(userCred) \n    //     })\n    // }\n\n    // const signUpWithEmail = async(email, password, username, firstName, lastName, phoneNumber) => {\n    //     await firebase\n    //     .auth()\n    //     .createUserWithEmailAndPassword(email, password)\n    //     .then((userCred)=> {\n    //        if (userCred) {\n    //         userCred.user.displayName = firstName + \" \" + lastName;\n    //         userCred.user.phoneNumber = phoneNumber;\n    //         loginWithEmail(email, password);\n    //         setAuth(true);\n    //         window.localStorage.setItem('auth', 'true')\n    //         setUser(firebase.auth().currentUser);\n    //         console.log(user)\n    //     } \n    //     })\n    // }\n\n    // useEffect(() => {\n    //     if (token) {\n    //         fetchData(token);\n    //     }\n    // },[token])\n\n    // const fetchData = async (token) =>{\n    //     const res = await axios.get(\"http://localhost:5000/api/todos\", {\n    //         headers : {\n    //             Authorization: 'Bearer ' + token,\n    //         }\n    //     })\n    //     console.log(res.data)\n    // }\n  return (\n    <Router>\n      <AuthProvider>\n          <Routes>\n            <Route path=\"/\" element ={<><NavDashboard/><Browse/></>}/>\n            <Route path=\"/sell\" element ={<><NavDashboard/><Sell/></>}/>\n            {/* <Route path=\"/signup\" element={<><Nav/><Signup/></>}/> */}\n          </Routes>\n      </AuthProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/jensenzhang/Desktop/idyll-react/client/src/config/firebase-config.js",[],"/Users/jensenzhang/Desktop/idyll-react/client/src/components/NavDashboard.js",["45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71"],"/Users/jensenzhang/Desktop/idyll-react/client/src/components/Search.js",[],"/Users/jensenzhang/Desktop/idyll-react/client/src/components/Sell.js",[],"/Users/jensenzhang/Desktop/idyll-react/client/src/contexts/AuthContext.js",["72","73","74"],"import React, { useContext, useEffect, useState } from 'react'\nimport {auth} from '../config/firebase-config'\nimport axios from 'axios'\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider ({ children }) {\n    const [zipCode, setZipCode] = useState('getting zip code...');\n    const [currentUser, setCurrentUser] = useState(undefined);\n    const [authState, setAuthState] = useState(false || window.localStorage.getItem(\"auth\")===true);\n    const [token, setToken] = useState('')\n    const [loading, setLoading] = useState(true)\n    const [userData, setUserData] = useState(undefined);\n\n    const getZipCode = async () => {\n        axios.get('https://ipapi.co/json/').then((res) => {\n            setZipCode(res.data.postal);\n        }).catch((err) => {\n            console.log(err);\n            setZipCode('Failed to retreive zip code');\n        });\n    }\n\n    async function signup(email, password, username, firstName, lastName, phoneNumber) {\n        let res = undefined;\n        await auth\n        .createUserWithEmailAndPassword(email, password)\n        .then((userCred)=> {\n           if (userCred) {\n            setAuthState(true);\n            window.localStorage.setItem('auth', 'true')\n            userCred.user.getIdToken().then((token) => {\n                setToken(token)\n            }).catch(()=> {console.log(\"bruh\")})\n            setCurrentUser(userCred);\n            signupUser(token, email, username, firstName, lastName, phoneNumber)\n        } \n        }).catch(err => {\n            res = err;\n        })\n        return res;\n    }\n\n    async function login(email, password) {\n        let res = undefined;\n        await auth\n        .signInWithEmailAndPassword(email, password)\n        .then((userCred)=> {\n            if (userCred) {\n                setAuthState(true);\n                window.localStorage.setItem('auth', 'true')\n                setCurrentUser(userCred);\n            }\n        }).catch(err => {\n            res = err;\n        })\n        return res;\n    }\n\n    async function signout() {\n        await auth.signOut()\n        localStorage.setItem('auth', 'false')\n    }\n\n    const fetchData = async (token) =>{\n        const res = await axios.get(\"http://localhost:5000/api/auth\", {\n            headers : {\n                Authorization: 'Bearer ' + token,\n            }\n        })\n        console.log(res.data)\n    }\n\n    const signupUser = async (token, email, username, firstName, lastName, phoneNumber) =>{\n        //https://us-central1-idyll-29e66.cloudfunctions.net/server/api/signup\n        //http://localhost:5000/api/signup\n        const res = await axios.post(\"https://us-central1-idyll-29e66.cloudfunctions.net/server/api/signup\", \n        { \n            email: email,\n            username: username,\n            firstName: firstName,\n            lastName: lastName,\n            phoneNumber: phoneNumber\n        }, \n        {\n            headers : {\n                Authorization: 'Bearer ' + token,\n            }\n        })\n        console.log(res.data)\n    }\n\n    const getUserData = async(token) =>{\n        const res = await axios.get(\"https://us-central1-idyll-29e66.cloudfunctions.net/server/api/getData\",\n        {\n            headers : {\n                Authorization: 'Bearer ' + token,\n            }\n        })\n        return JSON.parse(JSON.stringify(res.data));\n    }\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(async userCred =>  {\n            if (userCred) {\n                setAuthState(true)\n                window.localStorage.setItem('auth', 'true')\n                let token = await userCred.getIdToken();\n                setToken(token);\n                setCurrentUser(userCred);\n                let data = await getUserData(token)\n                setUserData(data);\n                setLoading(false);\n            }\n        })\n        return unsubscribe;\n    }, \n    [currentUser])\n\n    const value = {currentUser, signup, login, signout, userData, zipCode, getZipCode, token}\n\n    // useEffect(async() => {\n    //     if (token) {\n    //         const data = await getUserData(token);\n    //         console.log(data);\n    //     }\n    // },[token])\n\n    return (\n        <AuthContext.Provider value = {value}>\n            {children}\n        </AuthContext.Provider>   \n    ) \n}","/Users/jensenzhang/Desktop/idyll-react/client/src/components/Browse.js",["75","76"],"import React, { useEffect, useState, useRef} from \"react\"\nimport '../css/index.css'\nimport '../css/browse.css'\nimport { Dropdown } from \"react-bootstrap\"\nimport {Search} from 'react-bootstrap-icons'\n\nexport default function Browse(props) {\n    const searchRef = useRef();\n\n    return (\n        <>\n            <div className=\"search-container\">\n                <div className=\"search-bar\">\n                    <Search id=\"search-icon\" color=\"gray\" size={24} />\n                    <input ref = {searchRef} id=\"search-input\" placeholder=\"Search...\"/>\n                </div>\n            </div>\n            <div id=\"green-line\"></div>\n\n            <div className=\"filter-container\">\n                <button type=\"button\" class=\"green-btn\" id=\"filter-btn\"> Filter </button>\n                <div class=\"line-separator\"></div>\n                <h1 id=\"cuisine-header\">Cuisine</h1>\n                <div className=\"cuisine-form\">\n\n                    <div className=\"cuisine-boxes\">\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> American </label> <br></br>\n\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Chinese </label> <br></br>\n\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> French </label> <br></br>\n\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Indian </label> <br></br>\n\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Italian </label> <br></br>\n\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Japanese </label> <br></br>\n\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Korean </label> <br></br>\n                        \n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Mexican </label> <br></br>\n                        \n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Thai </label> <br></br>\n\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Other... </label> <br></br>\n                    </div>\n                    \n                </div>\n                <div class=\"line-separator\"></div>\n\n                <h1 id=\"type-header\">Type</h1>\n                <div className=\"type-form\">\n                    <div className=\"type-boxes\">\n                        <input class=\"form-check-input type-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label type-labels type-input\"> Breakfast </label> <br></br>\n\n                        <input class=\"form-check-input type-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label type-labels type-input\"> Lunch </label> <br></br>\n\n                        <input class=\"form-check-input type-input\" type=\"checkbox\" value=\"\"/>\n                        <label className=\"form-check-label type-labels type-input\"> Dinner </label> <br></br>\n                    </div>\n                    \n                </div>\n\n                <div class=\"line-separator\"></div>\n\n                <h1 id=\"location-header\">Location</h1>\n                <div className=\"location-form\">\n                <Dropdown>\n                    <Dropdown.Toggle variant=\"light\" id=\"location-dropdown\">\n                        Cities nearby\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Johns Creek</Dropdown.Item>\n                        <Dropdown.Item>Duluth</Dropdown.Item>\n                        <Dropdown.Item>Atlanta</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                </div>\n            </div>\n\n            <div id=\"dropdown-container\">\n            <Dropdown>\n                    <Dropdown.Toggle variant=\"light\" id=\"dropdown\">\n                        Cities nearby\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu>\n                        <Dropdown.Item>Johns Creek</Dropdown.Item>\n                        <Dropdown.Item>Duluth</Dropdown.Item>\n                        <Dropdown.Item>Atlanta</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n\n        </>\n    )\n}",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"85","line":1,"column":28,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"86","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":13},{"ruleId":"81","severity":1,"message":"87","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":16},{"ruleId":"81","severity":1,"message":"88","line":7,"column":8,"nodeType":"83","messageId":"84","endLine":7,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"89","line":9,"column":16,"nodeType":"83","messageId":"84","endLine":9,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":121,"column":55,"nodeType":"92","endLine":121,"endColumn":96},{"ruleId":"93","severity":1,"message":"94","line":125,"column":25,"nodeType":"92","endLine":125,"endColumn":36},{"ruleId":"95","severity":1,"message":"96","line":171,"column":109,"nodeType":"97","messageId":"98","endLine":171,"endColumn":131},{"ruleId":"95","severity":1,"message":"96","line":172,"column":175,"nodeType":"97","messageId":"98","endLine":172,"endColumn":189},{"ruleId":"95","severity":1,"message":"96","line":175,"column":191,"nodeType":"97","messageId":"98","endLine":175,"endColumn":208},{"ruleId":"93","severity":1,"message":"94","line":180,"column":33,"nodeType":"92","endLine":180,"endColumn":75},{"ruleId":"93","severity":1,"message":"94","line":191,"column":33,"nodeType":"92","endLine":191,"endColumn":56},{"ruleId":"90","severity":1,"message":"91","line":191,"column":56,"nodeType":"92","endLine":191,"endColumn":103},{"ruleId":"93","severity":1,"message":"94","line":192,"column":33,"nodeType":"92","endLine":192,"endColumn":55},{"ruleId":"90","severity":1,"message":"91","line":192,"column":55,"nodeType":"92","endLine":192,"endColumn":102},{"ruleId":"93","severity":1,"message":"94","line":196,"column":33,"nodeType":"92","endLine":196,"endColumn":100},{"ruleId":"95","severity":1,"message":"96","line":210,"column":86,"nodeType":"97","messageId":"98","endLine":210,"endColumn":108},{"ruleId":"95","severity":1,"message":"96","line":213,"column":85,"nodeType":"97","messageId":"98","endLine":213,"endColumn":107},{"ruleId":"95","severity":1,"message":"96","line":216,"column":82,"nodeType":"97","messageId":"98","endLine":216,"endColumn":104},{"ruleId":"95","severity":1,"message":"96","line":219,"column":95,"nodeType":"97","messageId":"98","endLine":219,"endColumn":117},{"ruleId":"95","severity":1,"message":"96","line":222,"column":85,"nodeType":"97","messageId":"98","endLine":222,"endColumn":107},{"ruleId":"95","severity":1,"message":"96","line":225,"column":85,"nodeType":"97","messageId":"98","endLine":225,"endColumn":107},{"ruleId":"95","severity":1,"message":"96","line":228,"column":98,"nodeType":"97","messageId":"98","endLine":228,"endColumn":120},{"ruleId":"95","severity":1,"message":"96","line":231,"column":88,"nodeType":"97","messageId":"98","endLine":231,"endColumn":110},{"ruleId":"90","severity":1,"message":"91","line":250,"column":78,"nodeType":"92","endLine":250,"endColumn":133},{"ruleId":"90","severity":1,"message":"91","line":254,"column":77,"nodeType":"92","endLine":254,"endColumn":131},{"ruleId":"93","severity":1,"message":"94","line":261,"column":33,"nodeType":"92","endLine":261,"endColumn":94},{"ruleId":"93","severity":1,"message":"94","line":276,"column":25,"nodeType":"92","endLine":276,"endColumn":36},{"ruleId":"93","severity":1,"message":"94","line":277,"column":25,"nodeType":"92","endLine":277,"endColumn":36},{"ruleId":"93","severity":1,"message":"94","line":278,"column":25,"nodeType":"92","endLine":278,"endColumn":36},{"ruleId":"81","severity":1,"message":"99","line":14,"column":12,"nodeType":"83","messageId":"84","endLine":14,"endColumn":21},{"ruleId":"81","severity":1,"message":"100","line":16,"column":12,"nodeType":"83","messageId":"84","endLine":16,"endColumn":19},{"ruleId":"81","severity":1,"message":"101","line":69,"column":11,"nodeType":"83","messageId":"84","endLine":69,"endColumn":20},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"85","line":1,"column":28,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'firebase' is defined but never used.","'Search' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'authState' is assigned a value but never used.","'loading' is assigned a value but never used.","'fetchData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]