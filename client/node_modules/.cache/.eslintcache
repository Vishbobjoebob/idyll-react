[{"C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\index.js":"1","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\App.js":"2","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\config\\firebase-config.js":"3","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\components\\Browse.js":"4","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\components\\Sell.js":"5","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\components\\Search.js":"6","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\components\\Nav.js":"7","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\components\\NavDashboard.js":"8","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\contexts\\AuthContext.js":"9"},{"size":309,"mtime":1637854485013,"results":"10","hashOfConfig":"11"},{"size":3533,"mtime":1638244074857,"results":"12","hashOfConfig":"11"},{"size":574,"mtime":1637471710122,"results":"13","hashOfConfig":"11"},{"size":5443,"mtime":1638324247904,"results":"14","hashOfConfig":"11"},{"size":4765,"mtime":1634766237512,"results":"15","hashOfConfig":"11"},{"size":305,"mtime":1637703490006,"results":"16","hashOfConfig":"11"},{"size":2083,"mtime":1636568513294,"results":"17","hashOfConfig":"11"},{"size":15876,"mtime":1637878748660,"results":"18","hashOfConfig":"11"},{"size":4074,"mtime":1637861078110,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1eyi32g",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"22"},"C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\index.js",[],["45","46"],"C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\App.js",["47","48","49","50","51","52"],"import React, { useEffect, useState} from \"react\"\r\nimport axios from 'axios'\r\nimport './App.css';\r\nimport firebase from 'firebase/compat/app'\r\nimport 'firebase/compat/auth'\r\nimport Sell from './components/Sell'\r\nimport Search from './components/Search'\r\nimport Browse from './components/Browse'\r\nimport NavDashboard from './components/NavDashboard';\r\nimport { AuthProvider } from './contexts/AuthContext';\r\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom'\r\n\r\nfunction App() {  \r\n    // const [auth, setAuth] = useState(false || window.localStorage.getItem(\"auth\")===true);\r\n    // const [token, setToken] = useState('')\r\n    // const [user, setUser] = useState(firebase.auth().currentUser)\r\n\r\n    // useEffect(()=> {\r\n    //     firebase.auth().onAuthStateChanged((userCred) => {\r\n    //     if (userCred) {\r\n    //         setAuth(true)\r\n    //         window.localStorage.setItem('auth', 'true')\r\n    //         userCred.getIdToken().then((token) => {\r\n    //         setToken(token)\r\n    //         })\r\n    //         setUser(firebase.auth().currentUser);\r\n    //         console.log(user)\r\n    //     }\r\n    //     })\r\n    // })\r\n    // const loginWithGoogle = async() => {\r\n    //     await firebase\r\n    //     .auth()\r\n    //     .signInWithPopup(new firebase.auth.GoogleAuthProvider())\r\n    //     .then((userCred)=> {\r\n    //     if (userCred) {\r\n    //         setAuth(true);\r\n    //         window.localStorage.setItem('auth', 'true')\r\n    //         setUser(firebase.auth().currentUser);\r\n    //         console.log(user)\r\n    //     }\r\n    //     console.log(userCred) \r\n    //     })\r\n    // }\r\n\r\n    // const loginWithEmail = async(email, password) => {\r\n    //     await firebase\r\n    //     .auth()\r\n    //     .signInWithEmailAndPassword(email, password)\r\n    //     .then((userCred)=> {\r\n    //     if (userCred) {\r\n    //         console.log(userCred)\r\n    //         setAuth(true);\r\n    //         window.localStorage.setItem('auth', 'true')\r\n    //         setUser(firebase.auth().currentUser);\r\n    //         console.log(user)\r\n    //     }\r\n    //     console.log(userCred) \r\n    //     })\r\n    // }\r\n\r\n    // const signUpWithEmail = async(email, password, username, firstName, lastName, phoneNumber) => {\r\n    //     await firebase\r\n    //     .auth()\r\n    //     .createUserWithEmailAndPassword(email, password)\r\n    //     .then((userCred)=> {\r\n    //        if (userCred) {\r\n    //         userCred.user.displayName = firstName + \" \" + lastName;\r\n    //         userCred.user.phoneNumber = phoneNumber;\r\n    //         loginWithEmail(email, password);\r\n    //         setAuth(true);\r\n    //         window.localStorage.setItem('auth', 'true')\r\n    //         setUser(firebase.auth().currentUser);\r\n    //         console.log(user)\r\n    //     } \r\n    //     })\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     if (token) {\r\n    //         fetchData(token);\r\n    //     }\r\n    // },[token])\r\n\r\n    // const fetchData = async (token) =>{\r\n    //     const res = await axios.get(\"http://localhost:5000/api/todos\", {\r\n    //         headers : {\r\n    //             Authorization: 'Bearer ' + token,\r\n    //         }\r\n    //     })\r\n    //     console.log(res.data)\r\n    // }\r\n  return (\r\n    <Router>\r\n      <AuthProvider>\r\n          <Routes>\r\n            <Route path=\"/\" element ={<><NavDashboard/><Browse/></>}/>\r\n            {/* <Route path=\"/signup\" element={<><Nav/><Signup/></>}/> */}\r\n          </Routes>\r\n      </AuthProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\config\\firebase-config.js",[],"C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\components\\Browse.js",["53","54"],"import React, { useEffect, useState, useRef} from \"react\"\r\nimport '../css/index.css'\r\nimport '../css/browse.css'\r\nimport { Dropdown } from \"react-bootstrap\"\r\nimport {Search} from 'react-bootstrap-icons'\r\n\r\nexport default function Browse(props) {\r\n    const searchRef = useRef();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"search-container\">\r\n                <div className=\"search-bar\">\r\n                    <Search id=\"search-icon\" color=\"gray\" size={24} />\r\n                    <input ref = {searchRef} id=\"search-input\" placeholder=\"Search...\"/>\r\n                </div>\r\n            </div>\r\n            <div id=\"green-line\"></div>\r\n\r\n            <div className=\"filter-container\">\r\n                <button type=\"button\" class=\"green-btn\" id=\"filter-btn\"> Filter </button>\r\n                <div class=\"line-separator\"></div>\r\n                <h1 id=\"cuisine-header\">Cuisine</h1>\r\n                <div className=\"cuisine-form\">\r\n\r\n                    <div className=\"cuisine-boxes\">\r\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> American </label> <br></br>\r\n\r\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Chinese </label> <br></br>\r\n\r\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> French </label> <br></br>\r\n\r\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Indian </label> <br></br>\r\n\r\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Italian </label> <br></br>\r\n\r\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Japanese </label> <br></br>\r\n\r\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Korean </label> <br></br>\r\n                        \r\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Mexican </label> <br></br>\r\n                        \r\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Thai </label> <br></br>\r\n\r\n                        <input class=\"form-check-input cuisine-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label cuisine-labels cuisine-input\"> Other... </label> <br></br>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div class=\"line-separator\"></div>\r\n\r\n                <h1 id=\"type-header\">Type</h1>\r\n                <div className=\"type-form\">\r\n                    <div className=\"type-boxes\">\r\n                        <input class=\"form-check-input type-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label type-labels type-input\"> Breakfast </label> <br></br>\r\n\r\n                        <input class=\"form-check-input type-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label type-labels type-input\"> Lunch </label> <br></br>\r\n\r\n                        <input class=\"form-check-input type-input\" type=\"checkbox\" value=\"\"/>\r\n                        <label className=\"form-check-label type-labels type-input\"> Dinner </label> <br></br>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div class=\"line-separator\"></div>\r\n\r\n                <h1 id=\"location-header\">Location</h1>\r\n                <div className=\"location-form\">\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"light\" id=\"location-dropdown\">\r\n                        Cities nearby\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item>Johns Creek</Dropdown.Item>\r\n                        <Dropdown.Item>Duluth</Dropdown.Item>\r\n                        <Dropdown.Item>Atlanta</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"dropdown-container\">\r\n            <Dropdown>\r\n                    <Dropdown.Toggle variant=\"light\" id=\"dropdown\">\r\n                        Cities nearby\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item>Johns Creek</Dropdown.Item>\r\n                        <Dropdown.Item>Duluth</Dropdown.Item>\r\n                        <Dropdown.Item>Atlanta</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\components\\Sell.js",["55","56","57","58","59","60"],"import axios from 'axios'\r\nimport React, { useEffect, useState, componentDidMount} from \"react\"\r\nimport firebase from 'firebase/compat/app'\r\nimport 'firebase/compat/auth'\r\nimport '../css/index.css'\r\nimport '../css/styles.css'\r\nimport '../css/login.css'\r\n\r\nexport default function Login(props) {\r\n    if (props.user !== null) {\r\n        return (\r\n\r\n            <>\r\n                <div class=\"container-fluid scroll\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 col-md-12 col-lg-5 offset-lg-1\">\r\n                            <div class=\"form-wrapper\">\r\n                                <div class=\"form\">\r\n                                    <form id=\"item-information\" class=\"form-horizontal\" onsubmit=\"submitInformation(); return false;\">\r\n                                        <h1> Hey, \r\n                                            { props.user.displayName.split(\" \")[0] }! Please fill in your dish's info!</h1>\r\n                                        <label class=\"control-label\" for=\"dish-name\" class=\"label-name\"> Name of Dish </label>\r\n                                        <input class=\"form-control\" type=\"text\" id=\"dish-name\" name=\"dish-name\" autocomplete=\"off\" required/><br></br>\r\n\r\n                                        <label for=\"dish-price\"> Price </label>\r\n                                        <input class=\"form-control\" type=\"number\" id=\"dish-price\" name=\"dish-price\" step=\"any\" onkeydown=\"return formatPrice(event)\" pattern=\"/^\\d+.\\d{2,2}$/\" required/><br></br>\r\n\r\n                                        <label for=\"category-selection\"> Category </label>\r\n                                        <select class=\"form-control\" id=\"category-selection\" name=\"category-selection\" onchange=\"showOtherInput(); return false;\" required>\r\n                                    <option disabled selected>Select your food's category...</option>\r\n                                    <option value=\"American\">American</option>\r\n                                    <option value=\"Chinese\">Chinese</option>\r\n                                    <option value=\"French\">French</option>\r\n                                    <option value=\"Indian\">Indian</option>\r\n                                    <option value=\"Italian\">Italian</option>\r\n                                    <option value=\"Japanese\">Japanese</option>\r\n                                    <option value=\"Korean\">Korean</option>\r\n                                    <option value=\"Mexican\">Mexican</option>\r\n                                    <option value=\"Thai\">Thai</option>\r\n                                    <option value=\"Other\">Other...</option>\r\n                                </select>\r\n                                        <br></br>\r\n\r\n                                        <div class=\"other-input\" id=\"other-input\" required>\r\n                                            <label for=\"other-category\"> Please enter dish's category </label>\r\n                                            <input class=\"form-control\" type=\"text\" id=\"other-category\" name=\"other-category\"/><br></br>\r\n                                        </div>\r\n\r\n                                        <label for=\"dish-description\"> Description </label>\r\n                                        <textarea class=\"form-control\" type=\"text\" id=\"dish-description\" name=\"dish-description\" required></textarea>\r\n\r\n                                        <div class=\"form-check\">\r\n                                            <input class=\"form-check-input\" type=\"checkbox\" id=\"deliverable\" name=\"deliverable\"/>\r\n                                            <label class=\"form-check-label\" for=\"deliverable\"> Guest pickup? </label><br></br>\r\n                                        </div><br></br>\r\n\r\n                                        <label id=\"dish-photo-label\" for=\"dish-photo\"> Dish Photo </label><br></br>\r\n                                        <input class=\"form-control\" type=\"file\" id=\"dish-photo\" name=\"dish-photo\" method=\"post\" enctype=\"multipart/form-data\" accept=\"image/*\" onchange=\"\" multiple required/><br></br>\r\n\r\n                                        <input id=\"submit-btn\" class=\"btn btn-primary mb-3\" type=\"submit\" value=\"Submit\"/>\r\n                                        <input id=\"reset-btn\" class=\"btn btn-primary mb-3\" type=\"reset\" value=\"Reset\"/>\r\n                                    </form>\r\n                                    <div class=\"loader\" id=\"loader\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n    else {\r\n        return (<></>)\r\n        //redirect to login\r\n    }\r\n}","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\components\\Search.js",[],"C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\components\\Nav.js",["61","62","63","64","65"],"import axios from 'axios'\r\nimport React, { useEffect, useState} from \"react\"\r\nimport firebase from 'firebase/compat/app'\r\nimport 'firebase/compat/auth'\r\nimport '../css/styles.css'\r\nimport logo from '../images/logo.png'\r\n\r\nexport default function Nav(props) {\r\n    return (\r\n        <>\r\n            <nav id=\"navbar\" className=\"d-flex justify-content-xl-center justify-content-lg-center justify-content-md-center justify-content-sm-left align-items-center\">\r\n                {/* Navbar Logo */}\r\n                <div className=\"logo\">\r\n                    {/* Logo Placeholder for Inlustration */}\r\n                    <a id=\"image-link\" href=\"/home\"><img id=\"logo\" src={logo} width='48px'/> <div id=\"company-name\"> Idyll </div> </a>\r\n                </div>\r\n\r\n                {/* Navbar Links */}\r\n                    {/* {props.auth && props.user!==null ? (\r\n                        <ul id=\"menu\">\r\n                        </ul>\r\n                    ) : (\r\n                        <ul id=\"menu\">\r\n                        <li><a href=\"/home\">Home</a></li>\r\n                        <li><a href=\"/browse\">Browse</a></li>\r\n                        <li><a href=\"#contact\">Contact Us</a></li>\r\n                        <li><a href=\"/login\">Log in</a></li>\r\n                        <li><a href=\"/signup\">Sign up</a></li>\r\n                        <button onClick={props.login}> Login With Google </button>\r\n                        </ul>\r\n                    )} */} \r\n            </nav>\r\n\r\n            {/* Menu Icon */}\r\n            <div className=\"menuIcon\">\r\n                <span className=\"icon icon-bars\"></span>\r\n                <span className=\"icon icon-bars overlay\"></span>\r\n            </div>\r\n\r\n\r\n            <div className=\"overlay-menu\">\r\n                <ul id=\"menu\">\r\n                    <li><a href=\"/\">Home</a></li>\r\n                    <li><a href=\"#browse\">Browse</a></li>\r\n                    <li><a href=\"#contact\">Contact Us</a></li>\r\n                    <li><a href=\"/sell\">Sell</a></li>\r\n                </ul>\r\n            </div>\r\n\r\n            \r\n        </>\r\n    )\r\n}","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\components\\NavDashboard.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94"],"import React, { useEffect, useState, useRef} from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport 'firebase/compat/auth'\r\nimport '../css/nav.css'\r\n//import '../css/signup.css'\r\nimport logo from '../images/fullLogo.png'\r\nimport google_logo from '../images/google_logo.png'\r\nimport apple_logo from '../images/apple_logo.png'\r\nimport {Modal, Button, Alert, NavDropdown} from 'react-bootstrap'\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\nimport {PersonFill, ChevronCompactLeft, PersonCircle, CartFill} from \"react-bootstrap-icons\"\r\n\r\nexport default function NavDashboard(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [showSignup, setShowSignup] = useState(false)\r\n    const [showSignupChoose, setShowSignupChoose] = useState(false)\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleCloseSignup = () => setShowSignup(false);\r\n    const handleShowSignup = () => setShowSignup(true);\r\n    const handleCloseSignupChoose = () => setShowSignupChoose(false)\r\n    const handleShowSignupChoose = () => setShowSignupChoose(true)\r\n\r\n    const emailRefLogin = useRef();\r\n    const passwordRefLogin = useRef();\r\n    const rememberMeRefLogin = useRef();\r\n    const emailRef = useRef();\r\n    const emailConfirmRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfirmRef = useRef();\r\n    const firstNameRef = useRef();\r\n    const lastNameRef = useRef();\r\n    const usernameRef = useRef();\r\n    const phoneNumberRef = useRef();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const {currentUser, signup, login, signout, userData} = useAuth();\r\n    const [errorLogin, setErrorLogin] = useState(undefined);\r\n    const [error, setError] = useState(undefined);\r\n\r\n    async function submitLoginInformation(e) {\r\n        e.preventDefault();\r\n\r\n        setErrorLogin(\"\")\r\n        let loginRes = await login(emailRefLogin.current.value, passwordRefLogin.current.value)\r\n        if(loginRes) { \r\n            setErrorLogin('Invalid email or password')\r\n        } else {\r\n            setShow(false);\r\n            navigate(\"/\");\r\n        }\r\n    }\r\n\r\n    async function submitInformation(e) {\r\n        e.preventDefault();\r\n\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            setError(\"It looks like your passwords don't match. Please check again.\")\r\n            return;\r\n        }\r\n\r\n        if (emailRef.current.value !== emailConfirmRef.current.value) {\r\n            setError(\"It looks like your emails don't match. Please check again.\")\r\n            return;\r\n        }\r\n\r\n        setError(\"\")\r\n        let res = await signup(emailRef.current.value, passwordRef.current.value, usernameRef.current.value, firstNameRef.current.value, lastNameRef.current.value, phoneNumberRef.current.value)\r\n        if (res) {\r\n            switch (res.code) {\r\n                case \"auth/email-already-in-use\":\r\n                    setError(\"It looks like you already have an account with this email. Please login.\")\r\n                    break;\r\n                case \"auth/invalid-email\": \r\n                    setError(\"Please use a valid email.\")\r\n                    break;\r\n                case \"auth/weak-password\":\r\n                    setError(\"Your password is too weak. Please try again.\")\r\n                    break;\r\n                default:\r\n                    setError(\"We failed to create an account for you. Please try again.\")\r\n            }\r\n        }\r\n        handleCloseSignup();\r\n        navigate(\"/\");\r\n\r\n    };\r\n\r\n    async function switchToSignupChoose(e) {\r\n        e.preventDefault();\r\n        handleClose();\r\n        handleShowSignupChoose();\r\n    }\r\n\r\n    async function switchToLogin(e) {\r\n        e.preventDefault();\r\n        handleCloseSignupChoose();\r\n        handleShow();\r\n    }\r\n\r\n    async function switchToSignup(e) {\r\n        e.preventDefault();\r\n        handleCloseSignupChoose();\r\n        handleShowSignup();\r\n    }\r\n\r\n    async function switchToSignupChooseFromEmail(e) {\r\n        e.preventDefault();\r\n        handleCloseSignup();\r\n        handleShowSignupChoose();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <nav id=\"navbar\" className=\"\">\r\n                {/* Navbar Logo */}\r\n                <div className=\"logo\">\r\n                    {/* Logo Placeholder for Inlustration */}\r\n                    <a id=\"company-logo\" href=\"/home\"><img id=\"logo\" src={logo} width='124px'/></a>\r\n                </div>\r\n\r\n                <ul id=\"nav-links\">\r\n                    <li><a href=\"\">Map</a></li>\r\n                    <li><a href=\"\">Browse</a></li>\r\n                    <li><a href=\"\">Sell</a></li>\r\n                </ul>\r\n\r\n                {/* <div> Welcome {currentUser.email} </div> */}\r\n\r\n                {/* Navbar Links */}\r\n                    {/* {props.auth && props.user!==null ? (\r\n                        <ul id=\"menu\">\r\n                        </ul>\r\n                    ) : (\r\n                        <ul id=\"menu\">\r\n                        <li><a href=\"/home\">Home</a></li>\r\n                        <li><a href=\"/browse\">Browse</a></li>\r\n                        <li><a href=\"#contact\">Contact Us</a></li>\r\n                        <li><a href=\"/login\">Log in</a></li>\r\n                        <li><a href=\"/signup\">Sign up</a></li>\r\n                        <button onClick={props.login}> Login With Google </button>\r\n                        </ul>\r\n                    )} */} \r\n                    {currentUser && userData ? (\r\n                        <div class=\"navbar-icons\">\r\n                            <NavDropdown title={<PersonCircle size={32} color = \"black\"/>} className=\"navbar-icon\">\r\n                                Welcome {userData.firstName}\r\n                                <NavDropdown.Item href=\"/\" onClick={signout}>Log Out</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title={<CartFill size={32} color = \"black\"/>} className=\"navbar-icon\" color=\"black\"></NavDropdown>\r\n                        </div>\r\n                    ) : (\r\n                        <div class=\"navbar-icons\">\r\n                            <NavDropdown title={<div class=\"black-thin-navbar-text\"> Welcome Sign In</div>} className=\"navbar-icon\">\r\n                                <NavDropdown.Item onClick={handleShow}><button type=\"button\" class=\"green-btn\" id=\"login-btn\" onClick={handleShow}> Log In </button></NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <NavDropdown title={<CartFill size={32} color = \"black\"/>} className=\"navbar-icon\" color=\"black\"></NavDropdown>\r\n                        </div>\r\n                    )}\r\n                    {/* <button type=\"button\" class=\"green-btn\" id=\"login-btn\" onClick={handleShow}> Log In </button> */}\r\n\r\n                    <Modal id=\"login-modal\" show={show} onHide={handleClose} aria-labelledby=\"contained-modal-title-vcenter\" backdrop=\"static\" centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Log In To Idyll</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <form id=\"item-information\" className=\"form-horizontal\" onSubmit={submitLoginInformation}>\r\n                            {errorLogin && <Alert variant = 'danger'>{errorLogin}</Alert>}\r\n                                <label className=\"control-label\" style={{margin:\"0px\"}} htmlFor=\"dish-name\" className=\"label-name\" id=\"email-label\"> Email </label>\r\n                                <input ref = {emailRefLogin} className=\"form-control green-border\" type=\"text\" id=\"email\" name=\"email\" autoComplete=\"off\" placeholder=\"Email\" id=\"email-box\" required/><br></br>\r\n\r\n                                <label htmlFor=\"dish-price\" id=\"password-label\"> Password </label>\r\n                                <input ref = {passwordRefLogin} className=\"form-control green-border\" type=\"password\" id=\"password\" name=\"password\" autoComplete=\"off\" placeholder=\"Password\" id=\"password-box\" required/><br></br>\r\n\r\n                                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remember-me\"/>\r\n                                <label ref = {rememberMeRefLogin} className=\"form-check-label\" for=\"remember-me\" id=\"remember-me-label\"> Remember Me </label>\r\n\r\n                                <a href=\"#\" class=\"\" id=\"forgot-password\">Forgot password?</a>\r\n\r\n                                <input id=\"submit-btn\" className=\"btn btn-primary mb-3\" type=\"submit\" value=\"Login\"/>\r\n                            </form>\r\n\r\n                            <div class=\"separator\">\r\n                                <div id = \"left-line\" class=\"line-bruh\"></div>\r\n                                <div id = \"or\"> OR </div>\r\n                                <div id = \"left-line\" class=\"line-bruh\"></div>\r\n                            </div>\r\n                            <div class=\"alternative-auth\">\r\n                                <a id=\"google\" href=\"\"><img id=\"logo\" src={google_logo} width='54px'/></a>\r\n                                <a id=\"apple\" href=\"\"><img id=\"logo\" src={apple_logo} width='122px'/></a>\r\n                            </div>\r\n                            <div id=\"registration\"> \r\n                                <div id=\"registration-question\">Not registered?</div>\r\n                                <a id=\"registration-signup\" href=\"\" onClick={switchToSignupChoose}> Sign Up for free! </a>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n\r\n                    <Modal id=\"signup-modal\" show={showSignup} onHide={handleCloseSignup} aria-labelledby=\"contained-modal-title-vcenter\" backdrop=\"static\" centered>\r\n                        <Modal.Header closeButton>\r\n                            <ChevronCompactLeft onClick={switchToSignupChooseFromEmail} id=\"back-btn\" color=\"black\" size={32}></ChevronCompactLeft>\r\n                            <Modal.Title id=\"email-title\">Sign Up With Email</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <form id=\"item-information\" className=\"form-horizontal\" onSubmit={(e) => {submitInformation(e)}}>\r\n                                {error && <Alert variant = 'danger'>{error}</Alert>}\r\n                                <div className=\"error\"></div>\r\n                                <label htmlFor=\"firstName\" className=\"control-label\" className=\"label-name\"> First Name </label>\r\n                                <input ref = {firstNameRef} className=\"form-control\" type=\"text\" id=\"firstName\" name=\"firstName\" placeholder=\"John\" autoComplete=\"off\" required/><br></br>\r\n\r\n                                <label htmlFor=\"lastName\" className=\"control-label\" className=\"label-name\"> Last Name </label>\r\n                                <input ref = {lastNameRef} className=\"form-control\" type=\"text\" id=\"lastName\" name=\"lastName\" placeholder=\"Doe\" autoComplete=\"off\" required/><br></br>\r\n\r\n                                <label htmlFor=\"email\" className=\"control-label\" className=\"label-name\"> Email </label>\r\n                                <input ref = {emailRef} className=\"form-control\" type=\"text\" id=\"email\" name=\"email\" placeholder=\"idyll@idyll.shop\" autoComplete=\"off\" required/><br></br>\r\n                                \r\n                                <label htmlFor=\"email-confirmation\" className=\"control-label\" className=\"label-name\"> Email Confirmation </label>\r\n                                <input ref = {emailConfirmRef} className=\"form-control\" type=\"text\" id=\"email-confirmation\" name=\"emailConfirmation\" placeholder=\"idyll@idyll.shop\" autoComplete=\"off\" required/><br></br>\r\n\r\n                                <label htmlFor=\"username\" className=\"control-label\" className=\"label-name\"> Username </label>\r\n                                <input ref = {usernameRef} className=\"form-control\" type=\"text\" id=\"username\" name=\"username\" placeholder=\"Idyll\" autoComplete=\"off\" required/><br></br>\r\n\r\n                                <label htmlFor=\"password\" className=\"control-label\" className=\"label-name\"> Password </label>\r\n                                <input ref = {passwordRef} className=\"form-control\" type=\"password\" id=\"password\" name=\"password\" placeholder=\"At least 6 letters and numbers\" autoComplete=\"off\" required/><br></br>\r\n\r\n                                <label htmlFor=\"password-confirmation\" className=\"control-label\" className=\"label-name\"> Password Confirmation </label>\r\n                                <input ref = {passwordConfirmRef} className=\"form-control\" type=\"password\" id=\"password-confirmation\" name=\"passwordConfirmation\" placeholder=\"At least 6 letters and numbers\" autoComplete=\"off\" required/><br></br>\r\n\r\n                                <label htmlFor=\"phoneNumber\" className=\"control-label\" className=\"label-name\"> Phone Number </label>\r\n                                <input ref = {phoneNumberRef} className=\"form-control\" type=\"text\" id=\"phoneNumber\" name=\"phoneNumber\" placeholder=\"xxxxxxxxxx\" autoComplete=\"off\" required/><br></br>\r\n\r\n                                <input id=\"submit-btn\" className=\"btn btn-primary mb-3\" type=\"submit\" value=\"Sign Up\"/>\r\n                            </form>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n\r\n                    <Modal id=\"signup-choose-modal\" show={showSignupChoose} onHide={handleCloseSignupChoose} aria-labelledby=\"contained-modal-title-vcenter\" backdrop=\"static\" centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Sign Up for Idyll</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div class=\"signup-options\">\r\n                                <div class=\"option\" id=\"email-and-password-option\" onClick={switchToSignup}>\r\n                                    <div class=\"subpicture\" id=\"email-pic\"><PersonFill class=\"center-pic\" color=\"black\" size = {37}></PersonFill></div>\r\n                                    <div class=\"option-text\">Use email/password</div>\r\n                                </div>\r\n                                <div class=\"option\" id=\"google-option\" >\r\n                                    <div class=\"subpicture\" id=\"google-pic\"> <img class=\"center-pic\" src={google_logo} width='36px'></img></div>\r\n                                    <div class=\"option-text\">Continue With Google</div>\r\n                                </div>\r\n                                <div class=\"option\" id=\"apple-option\" >\r\n                                    <div class=\"subpicture\" id=\"apple-pic\"> <img class=\"center-pic\" src={apple_logo} width='73px'></img></div>\r\n                                    <div class=\"option-text\">Continue With Apple</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div id=\"registration1\"> \r\n                                <div id=\"registration-question1\">Already registered?</div>\r\n                                <a id=\"registration-signup1\" href=\"\" onClick={switchToLogin}> Log in! </a>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Modal>\r\n            </nav>\r\n\r\n            {/* Menu Icon */}\r\n            <div className=\"menuIcon\">\r\n                <span className=\"icon icon-bars\"></span>\r\n                <span className=\"icon icon-bars overlay\"></span>\r\n            </div>\r\n\r\n\r\n            <div className=\"overlay-menu\">\r\n                <ul id=\"menu\">\r\n                    <li><a href=\"\">Map</a></li>\r\n                    <li><a href=\"\">Browse</a></li>\r\n                    <li><a href=\"\">Sell</a></li>\r\n                </ul>\r\n            </div>\r\n\r\n            \r\n        </>\r\n    )\r\n}","C:\\Users\\pasam\\Desktop\\idyll\\client\\src\\contexts\\AuthContext.js",["95","96","97"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport {auth} from '../config/firebase-config'\r\nimport axios from 'axios'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider ({ children }) {\r\n    const [currentUser, setCurrentUser] = useState(undefined);\r\n    const [authState, setAuthState] = useState(false || window.localStorage.getItem(\"auth\")===true);\r\n    const [token, setToken] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const [userData, setUserData] = useState(undefined);\r\n\r\n    async function signup(email, password, username, firstName, lastName, phoneNumber) {\r\n        let res = undefined;\r\n        await auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((userCred)=> {\r\n           if (userCred) {\r\n            setAuthState(true);\r\n            window.localStorage.setItem('auth', 'true')\r\n            userCred.user.getIdToken().then((token) => {\r\n                setToken(token)\r\n            }).catch(()=> {console.log(\"bruh\")})\r\n            setCurrentUser(userCred);\r\n            signupUser(token, email, username, firstName, lastName, phoneNumber)\r\n        } \r\n        }).catch(err => {\r\n            res = err;\r\n        })\r\n        return res;\r\n    }\r\n\r\n    async function login(email, password) {\r\n        let res = undefined;\r\n        await auth\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then((userCred)=> {\r\n            if (userCred) {\r\n                setAuthState(true);\r\n                window.localStorage.setItem('auth', 'true')\r\n                setCurrentUser(userCred);\r\n            }\r\n        }).catch(err => {\r\n            res = err;\r\n        })\r\n        return res;\r\n    }\r\n\r\n    async function signout() {\r\n        await auth.signOut()\r\n    }\r\n\r\n    const fetchData = async (token) =>{\r\n        const res = await axios.get(\"http://localhost:5000/api/auth\", {\r\n            headers : {\r\n                Authorization: 'Bearer ' + token,\r\n            }\r\n        })\r\n        console.log(res.data)\r\n    }\r\n\r\n    const signupUser = async (token, email, username, firstName, lastName, phoneNumber) =>{\r\n        //https://us-central1-idyll-29e66.cloudfunctions.net/server/api/signup\r\n        //http://localhost:5000/api/signup\r\n        const res = await axios.post(\"https://us-central1-idyll-29e66.cloudfunctions.net/server/api/signup\", \r\n        { \r\n            email: email,\r\n            username: username,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            phoneNumber: phoneNumber\r\n        }, \r\n        {\r\n            headers : {\r\n                Authorization: 'Bearer ' + token,\r\n            }\r\n        })\r\n        console.log(res.data)\r\n    }\r\n\r\n    const getUserData = async(token) =>{\r\n        const res = await axios.get(\"https://us-central1-idyll-29e66.cloudfunctions.net/server/api/getData\",\r\n        {\r\n            headers : {\r\n                Authorization: 'Bearer ' + token,\r\n            }\r\n        })\r\n        return JSON.parse(JSON.stringify(res.data));\r\n    }\r\n\r\n    const value = {currentUser, signup, login, signout, userData}\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async userCred =>  {\r\n            if (userCred) {\r\n                setAuthState(true)\r\n                window.localStorage.setItem('auth', 'true')\r\n                let token = await userCred.getIdToken();\r\n                setToken(token);\r\n                setCurrentUser(userCred);\r\n                let data = await getUserData(token)\r\n                setUserData(data);\r\n                setLoading(false);\r\n            }\r\n        })\r\n        return unsubscribe;\r\n    }, \r\n    [currentUser])\r\n\r\n    // useEffect(async() => {\r\n    //     if (token) {\r\n    //         const data = await getUserData(token);\r\n    //         console.log(data);\r\n    //     }\r\n    // },[token])\r\n\r\n    return (\r\n        <AuthContext.Provider value = {value}>\r\n            {children}\r\n        </AuthContext.Provider>   \r\n    ) \r\n}",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"107","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":13},{"ruleId":"102","severity":1,"message":"108","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":16},{"ruleId":"102","severity":1,"message":"109","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":12},{"ruleId":"102","severity":1,"message":"110","line":7,"column":8,"nodeType":"104","messageId":"105","endLine":7,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"107","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":2,"column":17,"nodeType":"104","messageId":"105","endLine":2,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":2,"column":28,"nodeType":"104","messageId":"105","endLine":2,"endColumn":36},{"ruleId":"102","severity":1,"message":"111","line":2,"column":38,"nodeType":"104","messageId":"105","endLine":2,"endColumn":55},{"ruleId":"102","severity":1,"message":"108","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":22,"column":86,"nodeType":"114","messageId":"115","endLine":22,"endColumn":104},{"ruleId":"102","severity":1,"message":"107","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":2,"column":17,"nodeType":"104","messageId":"105","endLine":2,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":2,"column":28,"nodeType":"104","messageId":"105","endLine":2,"endColumn":36},{"ruleId":"102","severity":1,"message":"108","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":15,"column":53,"nodeType":"118","endLine":15,"endColumn":93},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"119","line":9,"column":16,"nodeType":"104","messageId":"105","endLine":9,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":121,"column":55,"nodeType":"118","endLine":121,"endColumn":96},{"ruleId":"120","severity":1,"message":"121","line":125,"column":25,"nodeType":"118","endLine":125,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":126,"column":25,"nodeType":"118","endLine":126,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":127,"column":25,"nodeType":"118","endLine":127,"endColumn":36},{"ruleId":"112","severity":1,"message":"113","line":171,"column":109,"nodeType":"114","messageId":"115","endLine":171,"endColumn":131},{"ruleId":"112","severity":1,"message":"113","line":172,"column":175,"nodeType":"114","messageId":"115","endLine":172,"endColumn":189},{"ruleId":"112","severity":1,"message":"113","line":175,"column":191,"nodeType":"114","messageId":"115","endLine":175,"endColumn":208},{"ruleId":"120","severity":1,"message":"121","line":180,"column":33,"nodeType":"118","endLine":180,"endColumn":75},{"ruleId":"120","severity":1,"message":"121","line":191,"column":33,"nodeType":"118","endLine":191,"endColumn":56},{"ruleId":"116","severity":1,"message":"117","line":191,"column":56,"nodeType":"118","endLine":191,"endColumn":103},{"ruleId":"120","severity":1,"message":"121","line":192,"column":33,"nodeType":"118","endLine":192,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":192,"column":55,"nodeType":"118","endLine":192,"endColumn":102},{"ruleId":"120","severity":1,"message":"121","line":196,"column":33,"nodeType":"118","endLine":196,"endColumn":100},{"ruleId":"112","severity":1,"message":"113","line":210,"column":86,"nodeType":"114","messageId":"115","endLine":210,"endColumn":108},{"ruleId":"112","severity":1,"message":"113","line":213,"column":85,"nodeType":"114","messageId":"115","endLine":213,"endColumn":107},{"ruleId":"112","severity":1,"message":"113","line":216,"column":82,"nodeType":"114","messageId":"115","endLine":216,"endColumn":104},{"ruleId":"112","severity":1,"message":"113","line":219,"column":95,"nodeType":"114","messageId":"115","endLine":219,"endColumn":117},{"ruleId":"112","severity":1,"message":"113","line":222,"column":85,"nodeType":"114","messageId":"115","endLine":222,"endColumn":107},{"ruleId":"112","severity":1,"message":"113","line":225,"column":85,"nodeType":"114","messageId":"115","endLine":225,"endColumn":107},{"ruleId":"112","severity":1,"message":"113","line":228,"column":98,"nodeType":"114","messageId":"115","endLine":228,"endColumn":120},{"ruleId":"112","severity":1,"message":"113","line":231,"column":88,"nodeType":"114","messageId":"115","endLine":231,"endColumn":110},{"ruleId":"116","severity":1,"message":"117","line":250,"column":78,"nodeType":"118","endLine":250,"endColumn":133},{"ruleId":"116","severity":1,"message":"117","line":254,"column":77,"nodeType":"118","endLine":254,"endColumn":131},{"ruleId":"120","severity":1,"message":"121","line":261,"column":33,"nodeType":"118","endLine":261,"endColumn":94},{"ruleId":"120","severity":1,"message":"121","line":276,"column":25,"nodeType":"118","endLine":276,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":277,"column":25,"nodeType":"118","endLine":277,"endColumn":36},{"ruleId":"120","severity":1,"message":"121","line":278,"column":25,"nodeType":"118","endLine":278,"endColumn":36},{"ruleId":"102","severity":1,"message":"122","line":13,"column":12,"nodeType":"104","messageId":"105","endLine":13,"endColumn":21},{"ruleId":"102","severity":1,"message":"123","line":15,"column":12,"nodeType":"104","messageId":"105","endLine":15,"endColumn":19},{"ruleId":"102","severity":1,"message":"124","line":58,"column":11,"nodeType":"104","messageId":"105","endLine":58,"endColumn":20},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","'firebase' is defined but never used.","'Sell' is defined but never used.","'Search' is defined but never used.","'componentDidMount' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'authState' is assigned a value but never used.","'loading' is assigned a value but never used.","'fetchData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]