{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pasam\\\\Desktop\\\\idyll-react-proj-2\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [auth, setAuth] = useState(false || window.localStorage.getItem(\"auth\") === true);\n  const [token, setToken] = useState('');\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(userCred => {\n      if (userCred) {\n        setAuth(true);\n        window.localStorage.setItem('auth', 'true');\n        userCred.getIdToken().then(token => {\n          setToken(token);\n        });\n      }\n    });\n  });\n\n  const loginWithGoogle = () => {\n    firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider()).then(userCred => {\n      if (userCred) {\n        setAuth(true);\n        window.localStorage.setItem('auth', 'true');\n      }\n\n      console.log(userCred);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: auth ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loginWithGoogle,\n      children: \" Login with Google \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"37JQHYW8EH3XXCnZJo+x1sEhQ68=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/pasam/Desktop/idyll-react-proj-2/client/src/App.js"],"names":["React","useEffect","useState","firebase","App","auth","setAuth","window","localStorage","getItem","token","setToken","onAuthStateChanged","userCred","setItem","getIdToken","then","loginWithGoogle","signInWithPopup","GoogleAuthProvider","console","log"],"mappings":";;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,SAASK,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,MAAsC,IAAhD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACbE,IAAAA,QAAQ,CAACE,IAAT,GAAgBO,kBAAhB,CAAoCC,QAAD,IAAc;AAC/C,UAAIA,QAAJ,EAAc;AACZP,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,QAAAA,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4B,MAA5B,EAAoC,MAApC;AACAD,QAAAA,QAAQ,CAACE,UAAT,GAAsBC,IAAtB,CAA4BN,KAAD,IAAW;AACpCC,UAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,SAFD;AAGD;AACF,KARD;AASD,GAVQ,CAAT;;AAWA,QAAMO,eAAe,GAAG,MAAM;AAC5Bd,IAAAA,QAAQ,CACPE,IADD,GAECa,eAFD,CAEiB,IAAIf,QAAQ,CAACE,IAAT,CAAcc,kBAAlB,EAFjB,EAGCH,IAHD,CAGOH,QAAD,IAAa;AACjB,UAAIA,QAAJ,EAAc;AACZP,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,QAAAA,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4B,MAA5B,EAAoC,MAApC;AACD;;AACDM,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACD,KATD;AAUD,GAXD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGR,IAAI,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,gBAGL;AAAQ,MAAA,OAAO,EAAEY,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GApCQb,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport React, { useEffect, useState} from \"react\"\nimport './App.css';\nimport firebase from 'firebase/compat/app'\nimport 'firebase/compat/auth'\n\nfunction App() {  \n  const [auth, setAuth] = useState(false || window.localStorage.getItem(\"auth\")===true);\n  const [token, setToken] = useState('')\n\n  useEffect(()=> {\n    firebase.auth().onAuthStateChanged((userCred) => {\n      if (userCred) {\n        setAuth(true)\n        window.localStorage.setItem('auth', 'true')\n        userCred.getIdToken().then((token) => {\n          setToken(token)\n        })\n      }\n    })\n  })\n  const loginWithGoogle = () => {\n    firebase\n    .auth()\n    .signInWithPopup(new firebase.auth.GoogleAuthProvider())\n    .then((userCred)=> {\n      if (userCred) {\n        setAuth(true);\n        window.localStorage.setItem('auth', 'true')\n      }\n      console.log(userCred) \n    })\n  }\n  return (\n    <div className=\"App\">\n      {auth ? (\n        <h1>Todos</h1>\n      ) : (\n      <button onClick={loginWithGoogle}> Login with Google </button>\n      )}\n    </div> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}